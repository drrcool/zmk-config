/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";

        back_to_0 {
            bindings = <&to 0>;
            key-positions = <36 41>;
            layers = <2 3 4 1>;
        };

        back_to_dvorak {
            bindings = <&to 3>;
            key-positions = <36 40>;
            layers = <0 4>;
        };

        reset {
            bindings = <&reset>;
            key-positions = <1 5 36>;
            layers = <0 3>;
        };

        bootloader {
            bindings = <&trans>;
            key-positions = <10 6 36>;
            layers = <0 3>;
        };

        bt1 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <36 37 1>;
            layers = <0 1 2 4 3>;
        };

        bt2 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <37 36 2>;
            layers = <4 3 0 1 2>;
        };

        bt3 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <36 37 3>;
            layers = <4 3 0 1 2>;
        };

        bt4 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <4 36 37>;
            layers = <3 0 4 1 2>;
        };

        layer_5 {
            bindings = <&trans>;
            key-positions = <1 11 36 41>;
            layers = <3 0 4 1 2>;
        };
    };

    behaviors {
        semicolon_enter: semicolon_enter {
            compatible = "zmk,behavior-tap-dance";
            label = "SEMICOLON_ENTER";
            #binding-cells = <0>;
            bindings =
                <&kp SEMICOLON>,
                <&kp ENTER>;
        };
        layer_2_sk_or_tog: layer_2_sk_or_tog {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_2_SK_OR_TOG";
            #binding-cells = <0>;
            bindings =
                <&sl 2>,
                <&to 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none             &kp Q  &kp W             &kp E           &kp R             &kp T                &kp Y      &kp U               &kp I    &kp O                  &kp P  &none
&none             &kp A  &kp S             &kp D         &lt 1 F             &kp G                &kp H    &lt 1 J               &kp K    &kp L               &kp SEMI  &none
&none  &mt LEFT_SHIFT Z  &kp X             &kp C           &kp V             &kp B                &kp N      &kp M           &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH  &none
                                &mt LEFT_ALT ESC  &sk LEFT_SHIFT  &sk LEFT_CONTROL    &sk RIGHT_COMMAND  &kp SPACE  &layer_2_sk_or_tog
            >;
        };

        Arrow_number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none          &kp N1         &kp N2        &kp N3          &kp N4            &kp N5              &kp N6     &kp N7            &kp N8             &kp N9            &kp N0  &none
&none       &kp GRAVE  &kp BACKSLASH        &trans          &trans            &trans            &kp LEFT   &kp DOWN            &kp UP          &kp RIGHT  &kp SINGLE_QUOTE  &none
&none  &sk LEFT_SHIFT      &kp SLASH        &trans          &trans            &trans           &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &sk RIGHT_SHIFT  &none
                                      &sk LEFT_ALT  &sk LEFT_SHIFT  &sk LEFT_COMMAND    &sk LEFT_CONTROL  &kp SPACE     &kp BACKSPACE
            >;
        };

        aux_media {
            bindings = <
&none    &kp TAB  &none  &kp C_BRIGHTNESS_MAXIMUM  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS              &none            &none   &kp BSPC  &none
&none    &kp ESC  &none                     &none                 &none                 &none                     &kp C_PLAY_PAUSE                              &kp C_PREV         &kp C_NEXT            &none    &kp RET  &none
&none  &kp LSHFT  &none                     &none                 &none                 &none                                &none                              &kp K_MUTE  &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp RSHFT  &none
                                            &to 0              &sk RALT              &sk LGUI                            &sk LCTRL                               &kp SPACE              &to 0
            >;
        };

        dvorak {
            bindings = <
&none              &kp SQT  &kp COMMA  &kp DOT      &kp P     &kp Y        &kp F      &kp G  &kp C  &kp R             &kp L  &none
&none                &kp A      &kp O    &kp E    &lt 1 U     &kp I        &kp D    &lt 1 H  &kp T  &kp N             &kp S  &none
&none  &mt LEFT_SHIFT SEMI      &kp Q    &kp J      &kp K     &kp X        &kp B      &kp M  &kp W  &kp B  &mt LEFT_SHIFT Z  &none
                                       &kp ESC  &sk LSHFT  &sk LGUI    &sk LCTRL  &kp SPACE  &to 4
            >;
        };

        dvorak_aux {
            bindings = <
&trans    &kp TAB  &trans  &trans    &trans    &trans    &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS      &trans  &kp C_AC_BACK  &kp C_AC_FORWARD   &kp BSPC  &trans
&trans    &kp ESC  &trans  &trans    &trans    &trans                     &kp C_PLAY_PAUSE  &kp C_PREV     &kp C_NEXT        &kp C_STOP    &kp RET  &trans
&trans  &kp LSHFT  &trans  &trans    &trans    &trans                               &trans  &kp K_MUTE   &kp C_VOL_DN      &kp C_VOL_UP  &kp RSHFT  &trans
                            &to 3  &kp RALT  &kp LGUI                            &kp LCTRL   &kp SPACE          &to 3
            >;
        };

        rgb_boot {
            bindings = <
&none  &rgb_ug RGB_COLOR_HSB(234,92,49)  &rgb_ug RGB_COLOR_HSB(0,96,52)  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI       &reset    &none  &none  &none  &none  &none  &none
&none  &rgb_ug RGB_COLOR_HSB(280,95,49)                 &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &bootloader    &none  &none  &none  &none  &none  &none
&none    &rgb_ug RGB_COLOR_HSB(0,27,95)                 &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI        &none    &none  &none  &none  &none  &none  &none
                                                                                   &none            &none        &none    &none  &to 3  &to 0
            >;
        };
    };
};
